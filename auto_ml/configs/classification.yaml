sklearn.ensemble:

  GradientBoostingClassifier:
    n_estimators: [50, 100, 200]
    learning_rate: [0.01, 0.1, 0.2]
    max_depth: [3, 5, 7]
    subsample: [0.6, 0.8, 1.0]
    min_samples_split: [2, 5, 10]
    min_samples_leaf: [1, 2, 4]

  RandomForestClassifier:
    n_estimators: [50, 100, 200]
    max_depth: [None, 10, 20, 30]
    min_samples_split: [2, 5, 10]
    min_samples_leaf: [1, 2, 4]
    max_features: ['sqrt', 'log2', 0.3, 0.5]
    class_weight: [None, 'balanced']

sklearn.neighbors:

  KNeighborsClassifier:
    n_neighbors: [3, 5, 7, 9, 11]
    weights: ['uniform', 'distance']
    algorithm: ['auto', 'ball_tree', 'kd_tree', 'brute']
    leaf_size: [20, 30, 40]
    p: [1, 2]
    metric: ['minkowski', 'manhattan', 'euclidean']

sklearn.linear_model:
  LogisticRegression:
    penalty: ['l1', 'l2']
    C: loguniform(1e-3, 1e2)
    solver: ['liblinear', 'saga']
    max_iter: [100, 200]
    class_weight: [None, 'balanced']

sklearn.svm:
  SVC:
    C: [0.1, 1.0, 10.0, 100.0]
    kernel: ['linear', 'rbf', 'sigmoid']
    gamma: ['scale', 'auto', 0.01, 0.1, 1.0]
    class_weight: [None, 'balanced']